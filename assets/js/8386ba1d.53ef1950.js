"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([["38768"],{63754:function(e,n,t){t.r(n),t.d(n,{metadata:()=>r,contentTitle:()=>l,default:()=>p,assets:()=>u,toc:()=>d,frontMatter:()=>c});var r=JSON.parse('{"id":"group","title":"Group","description":"A group contains several screens inside a navigator for organizational purposes. They can also be used to apply the same options such as header styles to a group of screens, or to define a common layout etc.","source":"@site/versioned_docs/version-7.x/group.md","sourceDirName":".","slug":"/group","permalink":"/docs/group","draft":false,"unlisted":false,"editUrl":"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-7.x/group.md","tags":[],"version":"7.x","frontMatter":{"id":"group","title":"Group","sidebar_label":"Group"},"sidebar":"docs","previous":{"title":"Navigator","permalink":"/docs/navigator"},"next":{"title":"Screen","permalink":"/docs/screen"}}'),a=t("85893"),i=t("50065"),o=t("47902"),s=t("5525");let c={id:"group",title:"Group",sidebar_label:"Group"},l=void 0,u={},d=[{value:"Configuration",id:"configuration",level:2},{value:"Screen options",id:"screen-options",level:3},{value:"Screen layout",id:"screen-layout",level:3},{value:"Navigation key",id:"navigation-key",level:3}];function h(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["A group contains several ",(0,a.jsx)(n.a,{href:"/docs/screen",children:"screens"})," inside a navigator for organizational purposes. They can also be used to apply the same options such as header styles to a group of screens, or to define a common layout etc."]}),"\n",(0,a.jsxs)(o.Z,{groupId:"config",queryString:"config",children:[(0,a.jsxs)(s.Z,{value:"static",label:"Static",default:!0,children:[(0,a.jsxs)(n.p,{children:["Groups can be defined using the ",(0,a.jsx)(n.code,{children:"groups"})," property in the navigator configuration:"]}),(0,a.jsx)(n.pre,{"data-name":"Stack groups","data-snack":"true",children:(0,a.jsx)(n.code,{className:"language-js",metastring:'name="Stack groups" snack',children:"import * as React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from '@react-navigation/elements';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport {\n  createStaticNavigation,\n  useNavigation,\n} from '@react-navigation/native';\n\nfunction HomeScreen() {\n  const navigation = useNavigation();\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Home Screen</Text>\n      <Button onPress={() => navigation.navigate('Search')}>\n        Go to Search\n      </Button>\n    </View>\n  );\n}\n\nfunction EmptyScreen() {\n  return <View />;\n}\n\n// codeblock-focus-start\nconst MyStack = createNativeStackNavigator({\n  groups: {\n    App: {\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: '#FFB6C1',\n        },\n      },\n      screens: {\n        Home: HomeScreen,\n        Profile: EmptyScreen,\n      },\n    },\n    Modal: {\n      screenOptions: {\n        presentation: 'modal',\n      },\n      screens: {\n        Search: EmptyScreen,\n        Share: EmptyScreen,\n      },\n    },\n  },\n});\n// codeblock-focus-end\n\nconst Navigation = createStaticNavigation(Stack);\n\nexport default function App() {\n  return <Navigation />;\n}\n"})}),(0,a.jsxs)(n.p,{children:["The keys of the ",(0,a.jsx)(n.code,{children:"groups"})," object (e.g. ",(0,a.jsx)(n.code,{children:"Guest"}),", ",(0,a.jsx)(n.code,{children:"User"}),") are used as the ",(0,a.jsx)(n.a,{href:"#navigation-key",children:(0,a.jsx)(n.code,{children:"navigationKey"})})," for the group. You can use any string as the key."]})]}),(0,a.jsxs)(s.Z,{value:"dynamic",label:"Dynamic",children:[(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.code,{children:"Group"})," component is returned from a ",(0,a.jsx)(n.code,{children:"createXNavigator"})," function. After creating the navigator, it can be used as children of the ",(0,a.jsx)(n.code,{children:"Navigator"})," component:"]}),(0,a.jsx)(n.pre,{"data-name":"Stack groups","data-snack":"true",children:(0,a.jsx)(n.code,{className:"language-js",metastring:'name="Stack groups" snack',children:"import * as React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from '@react-navigation/elements';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\n\nconst Stack = createNativeStackNavigator();\n\nfunction HomeScreen() {\n  const navigation = useNavigation();\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Home Screen</Text>\n      <Button onPress={() => navigation.navigate('Search')}>\n        Go to Search\n      </Button>\n    </View>\n  );\n}\n\nfunction EmptyScreen() {\n  return <View />;\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      // codeblock-focus-start\n      <Stack.Navigator>\n        <Stack.Group\n          screenOptions={{ headerStyle: { backgroundColor: 'papayawhip' } }}\n        >\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          <Stack.Screen name=\"Profile\" component={EmptyScreen} />\n        </Stack.Group>\n        <Stack.Group screenOptions={{ presentation: 'modal' }}>\n          <Stack.Screen name=\"Search\" component={EmptyScreen} />\n          <Stack.Screen name=\"Share\" component={EmptyScreen} />\n        </Stack.Group>\n      </Stack.Navigator>\n      // codeblock-focus-end\n    </NavigationContainer>\n  );\n}\n"})}),(0,a.jsxs)(n.p,{children:["It's also possible to nest ",(0,a.jsx)(n.code,{children:"Group"})," components inside other ",(0,a.jsx)(n.code,{children:"Group"})," components."]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsx)(n.h3,{id:"screen-options",children:"Screen options"}),"\n",(0,a.jsx)(n.p,{children:"Options to configure how the screens inside the group get presented in the navigator. It accepts either an object or a function returning an object:"}),"\n",(0,a.jsxs)(o.Z,{groupId:"config",queryString:"config",children:[(0,a.jsx)(s.Z,{value:"static",label:"Static",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const MyStack = createNativeStackNavigator({\n  groups: {\n    Modal: {\n      // highlight-start\n      screenOptions: {\n        presentation: 'modal',\n      },\n      // highlight-end\n      screens: {\n        /* screens */\n      },\n    },\n  },\n});\n"})})}),(0,a.jsx)(s.Z,{value:"dynamic",label:"Dynamic",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"<Stack.Group\n  // highlight-start\n  screenOptions={{\n    presentation: 'modal',\n  }}\n  // highlight-end\n>\n  {/* screens */}\n</Stack.Group>\n"})})})]}),"\n",(0,a.jsxs)(n.p,{children:["When you pass a function, it'll receive the ",(0,a.jsx)(n.a,{href:"/docs/route-object",children:(0,a.jsx)(n.code,{children:"route"})})," and ",(0,a.jsx)(n.a,{href:"/docs/navigation-object",children:(0,a.jsx)(n.code,{children:"navigation"})}),":"]}),"\n",(0,a.jsxs)(o.Z,{groupId:"config",queryString:"config",children:[(0,a.jsx)(s.Z,{value:"static",label:"Static",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const MyStack = createNativeStackNavigator({\n  groups: {\n    Modal: {\n      // highlight-start\n      screenOptions: ({ route, navigation }) => ({\n        title: route.params.title,\n      }),\n      // highlight-end\n      screens: {\n        /* screens */\n      },\n    },\n  },\n});\n"})})}),(0,a.jsx)(s.Z,{value:"dynamic",label:"Dynamic",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"<Stack.Group\n  // highlight-start\n  screenOptions={({ route, navigation }) => ({\n    title: route.params.title,\n  })}\n  // highlight-end\n>\n  {/* screens */}\n</Stack.Group>\n"})})})]}),"\n",(0,a.jsxs)(n.p,{children:["These options are merged with the ",(0,a.jsx)(n.code,{children:"options"})," specified in the individual screens, and the screen's options will take precedence over the group's options."]}),"\n",(0,a.jsxs)(n.p,{children:["See ",(0,a.jsx)(n.a,{href:"/docs/screen-options",children:"Options for screens"})," for more details and examples."]}),"\n",(0,a.jsx)(n.h3,{id:"screen-layout",children:"Screen layout"}),"\n",(0,a.jsx)(n.p,{children:"A screen layout is a wrapper around each screen in the group. It makes it easier to provide things such as an error boundary and suspense fallback for all screens in the group, or wrap each screen with additional UI."}),"\n",(0,a.jsx)(n.p,{children:"It takes a function that returns a React element:"}),"\n",(0,a.jsxs)(o.Z,{groupId:"config",queryString:"config",children:[(0,a.jsx)(s.Z,{value:"static",label:"Static",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const MyStack = createNativeStackNavigator({\n  groups: {\n    Modal: {\n      // highlight-start\n      screenLayout: ({ children }) => (\n        <ErrorBoundary>\n          <React.Suspense\n            fallback={\n              <View style={styles.fallback}>\n                <Text style={styles.text}>Loading\u2026</Text>\n              </View>\n            }\n          >\n            {children}\n          </React.Suspense>\n        </ErrorBoundary>\n      ),\n      // highlight-end\n      screens: {\n        /* screens */\n      },\n    },\n  },\n});\n"})})}),(0,a.jsx)(s.Z,{value:"dynamic",label:"Dynamic",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"<Stack.Group\n  // highlight-start\n  screenLayout={({ children }) => (\n    <ErrorBoundary>\n      <React.Suspense\n        fallback={\n          <View style={styles.fallback}>\n            <Text style={styles.text}>Loading\u2026</Text>\n          </View>\n        }\n      >\n        {children}\n      </React.Suspense>\n    </ErrorBoundary>\n  )}\n  // highlight-end\n>\n  {/* screens */}\n</Stack.Group>\n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"navigation-key",children:"Navigation key"}),"\n",(0,a.jsx)(n.p,{children:"Optional key for a group of screens. If the key changes, all existing screens in this group will be removed (if used in a stack navigator) or reset (if used in a tab or drawer navigator):"}),"\n",(0,a.jsxs)(o.Z,{groupId:"config",queryString:"config",children:[(0,a.jsxs)(s.Z,{value:"static",label:"Static",default:!0,children:[(0,a.jsxs)(n.p,{children:["The name of the group is used as the ",(0,a.jsx)(n.code,{children:"navigationKey"}),":"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const MyStack = createNativeStackNavigator({\n  groups: {\n    // highlight-next-line\n    User: {\n      screens: {\n        /* screens */\n      },\n    },\n    // highlight-next-line\n    Guest: {\n      screens: {\n        /* screens */\n      },\n    },\n  },\n});\n"})}),(0,a.jsxs)(n.p,{children:["This means if a screen is defined in 2 groups and the groups use the ",(0,a.jsx)(n.a,{href:"/docs/static-configuration#if",children:(0,a.jsx)(n.code,{children:"if"})})," property, the screen will remount if the condition changes resulting in one group being removed and the other group being used."]})]}),(0,a.jsx)(s.Z,{value:"dynamic",label:"Dynamic",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"<Stack.Group\n  // highlight-next-line\n  navigationKey={isSignedIn ? 'user' : 'guest'}\n>\n  {/* screens */}\n</Stack.Group>\n"})})})]}),"\n",(0,a.jsxs)(n.p,{children:["This is similar to the ",(0,a.jsx)(n.a,{href:"/docs/screen#navigation-key",children:(0,a.jsx)(n.code,{children:"navigationKey"})})," prop for screens, but applies to a group of screens."]})]})}function p(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},5525:function(e,n,t){t.d(n,{Z:()=>o});var r=t("85893");t("67294");var a=t("67026");let i="tabItem_Ymn6";function o(e){let{children:n,hidden:t,className:o}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.Z)(i,o),hidden:t,children:n})}},47902:function(e,n,t){t.d(n,{Z:()=>y});var r=t("85893"),a=t("67294"),i=t("67026"),o=t("69599"),s=t("16550"),c=t("32000"),l=t("4520"),u=t("38341"),d=t("76009");function h(e){var n,t;return null!==(t=null===(n=a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error("Docusaurus error: Bad <Tabs> child <".concat("string"==typeof e.type?e.type:e.type.name,'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.'))}))||void 0===n?void 0:n.filter(Boolean))&&void 0!==t?t:[]}function p(e){let{value:n,tabValues:t}=e;return t.some(e=>e.value===n)}var g=t("7227");let f="tabList__CuJ",m="tabItem_LNqP";function v(e){let{className:n,block:t,selectedValue:a,selectValue:s,tabValues:c}=e,l=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),d=e=>{let n=e.currentTarget,t=c[l.indexOf(n)].value;t!==a&&(u(n),s(t))},h=e=>{var n,t;let r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{let t=l.indexOf(e.currentTarget)+1;r=null!==(n=l[t])&&void 0!==n?n:l[0];break}case"ArrowLeft":{let n=l.indexOf(e.currentTarget)-1;r=null!==(t=l[n])&&void 0!==t?t:l[l.length-1]}}null==r||r.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n),children:c.map(e=>{let{value:n,label:t,attributes:o}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>l.push(e),onKeyDown:h,onClick:d,...o,className:(0,i.Z)("tabs__item",m,null==o?void 0:o.className,{"tabs__item--active":a===n}),children:null!=t?t:n},n)})})}function x(e){let{lazy:n,children:t,selectedValue:o}=e,s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){let e=s.find(e=>e.props.value===o);return e?(0,a.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==o}))})}function j(e){let n=function(e){let{defaultValue:n,queryString:t=!1,groupId:r}=e,i=function(e){let{values:n,children:t}=e;return(0,a.useMemo)(()=>{let e=null!=n?n:h(t).map(e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}});return!function(e){let n=(0,u.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error('Docusaurus error: Duplicate values "'.concat(n.map(e=>e.value).join(", "),'" found in <Tabs>. Every value needs to be unique.'))}(e),e},[n,t])}(e),[o,g]=(0,a.useState)(()=>(function(e){var n;let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:r}))throw Error('Docusaurus error: The <Tabs> has a defaultValue "'.concat(t,'" but none of its children has the corresponding value. Available values are: ').concat(r.map(e=>e.value).join(", "),". If you intend to show no default tab, use defaultValue={null} instead."));return t}let a=null!==(n=r.find(e=>e.default))&&void 0!==n?n:r[0];if(!a)throw Error("Unexpected error: 0 tabValues");return a.value})({defaultValue:n,tabValues:i})),[f,m]=function(e){let{queryString:n=!1,groupId:t}=e,r=(0,s.k6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t}),o=(0,l._X)(i);return[o,(0,a.useCallback)(e=>{if(!i)return;let n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})},[i,r])]}({queryString:t,groupId:r}),[v,x]=function(e){var n;let{groupId:t}=e;let r=(n=t)?"docusaurus.tab.".concat(n):null,[i,o]=(0,d.Nk)(r);return[i,(0,a.useCallback)(e=>{if(!!r)o.set(e)},[r,o])]}({groupId:r}),j=(()=>{let e=null!=f?f:v;return p({value:e,tabValues:i})?e:null})();return(0,c.Z)(()=>{j&&g(j)},[j]),{selectedValue:o,selectValue:(0,a.useCallback)(e=>{if(!p({value:e,tabValues:i}))throw Error("Can't select invalid tab value=".concat(e));g(e),m(e),x(e)},[m,x,i]),tabValues:i}}(e);return(0,r.jsxs)("div",{className:(0,i.Z)("tabs-container",f),children:[(0,r.jsx)(v,{...n,...e}),(0,r.jsx)(x,{...n,...e})]})}function y(e){let n=(0,g.Z)();return(0,r.jsx)(j,{...e,children:h(e.children)},String(n))}},50065:function(e,n,t){t.d(n,{Z:function(){return s},a:function(){return o}});var r=t(67294);let a={},i=r.createContext(a);function o(e){let n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);